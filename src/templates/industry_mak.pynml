/*************SECONDARY INDUSTRY*********/

/* ******************************************************************
 * Definition of the industry tile, its callbacks, and graphics chain
 * ******************************************************************/

<tal:include metal:use-macro="load: spritesets.pynml" />

<tal:include metal:use-macro="load: spritelayouts.pynml" />

<tal:include metal:use-macro="load: graphics_switches.pynml" />

<tal:include define="location_checks_tile load: location_check_macros_tile.pynml"
             metal:use-macro="location_checks_tile.macros['render_tree']" />

<tal:include define="animation_macros load: animation_macros.pynml"
             metal:use-macro="animation_macros.macros['tile_animation']" />

<tal:include metal:use-macro="load: properties_tile.pynml" />


/* *************************************************
 * Definition of the industry
 * *************************************************/

<tal:include metal:use-macro="load: layouts.pynml" />

/* *************************************************
 * !!!!!!!!PRODUCTION BELOW!!!!!!!!!!
 * *************************************************/

<tal:include metal:use-macro="load: produce_mak.pynml" />

/* *************************************************
 * !!!!!!!CLOSURE BELOW!!!!!!!!
 * *************************************************/

<!--! <tal:include metal:use-macro="load: closure_secondary.pynml" /> -->

/* *************************************************
 * !!!!!!!!!!!!EXTRA TEXT BELOW!!!!!!!!!!!
 * *************************************************/

<tal:include metal:use-macro="load: extra_text_secondary.pynml" />

/* *************************************************
 * !!!!!!!!!!!!!!!AVAILABILITY BELOW!!!!!!!!
 * *************************************************/

<tal:include metal:use-macro="load: availability.pynml" />

/* *************************************************
 * !!!!!!!!!!LOCATION_CHECKS_INDUSTRY BELOW!!!!!!!!!!!!
 * *************************************************/

<tal:include define="location_checks_industry load: location_check_macros_industry.pynml"
             metal:use-macro="location_checks_industry.macros['render_tree']" />
			 
/* *************************************************
 * PROPERTIES_INDUSTRY of the industry
 * *************************************************/

<tal:include metal:use-macro="load: properties_industry.pynml" />

/* *************************************************
 * GRAPHICS BLOCK
 * *************************************************/

<!--! graphics block defined explicitly per industry subclass, to avoid too much fiddly conditional stuff -->
<tal:build_economies repeat="economy economies">
    <tal:industry_on_or_off condition="industry.get_property('enabled', economy) == True">
        if (economy==${economy.numeric_id}) {
            item(FEAT_INDUSTRIES, ${industry.id}, ${industry.numeric_id}) {
                graphics {
                    construction_probability: ${industry.id}_check_availability;
                    produce_cargo_arrival:    ${industry.id}_produce_cargo_arrival;
<!--!                    monthly_prod_change:      ${industry.id}_check_secondary_production_level;
                    random_prod_change:       ${industry.id}_check_secondary_closure; -->
                    monthly_prod_change:      CB_RESULT_IND_PROD_NO_CHANGE;
                    random_prod_change:       CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           ${industry.id}_check_location;
                    extra_text_fund:          ${industry.get_extra_text_fund(economy)};
                    extra_text_industry:      ${industry.id}_extra_text;
                    cargo_subtype_display:    ${industry.id}_cargo_subtype_display;
                    colour:                   switch_colour;
                }
            }
        }
    </tal:industry_on_or_off>
</tal:build_economies>

/* *************************************************
 * !!!!!!!!!END!!!!!!!!!
 * *************************************************/
